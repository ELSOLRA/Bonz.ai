# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org:   # - provide you own serverless organisation name or delete org: to continue without it
# "service" is the name of this project. This will also be added to your AWS resource names.
service: Bonzai

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-north-1
  environment:
    ROOM_TABLE: ${self:service}-rum
    ORDER_TABLE: ${self:service}-order
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem

          Resource:
            - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.ROOM_TABLE}
            - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.ORDER_TABLE}

package:
  individually: true

build:
  esbuild:
    bundle: true
    minify: true

functions:
  LoadData:
    handler: functions/LoadData/loadData.handler
  PlaceOrder:
    handler: functions/PlaceOrder/placeOrder.handler
    events:
      - httpApi:
          path: /book
          method: post
  CancelOrder:
    handler: functions/CancelOrder/cancelOrder.handler
    events:
      - httpApi:
          path: /cancel
          method: delete
  GetOrders:
    handler: functions/GetOrders/getOrders.handler
    events:
      - httpApi:
          path: /orders
          method: get
  GetOrder:
    handler: functions/GetOrder/getOrder.handler
    events:
      - httpApi:
          path: /orders/{orderId}
          method: get
  ChangeOrder:
    handler: functions/ChangeOrder/changeOrder.handler
    events:
      - httpApi:
          path: /orders/{orderId}
          method: post

resources:
  Resources:
    RoomTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.ROOM_TABLE}
        AttributeDefinitions:
          - AttributeName: type
            AttributeType: S
        KeySchema:
          - AttributeName: type
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    OrderTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.ORDER_TABLE}
        AttributeDefinitions:
          - AttributeName: orderId
            AttributeType: S
        KeySchema:
          - AttributeName: orderId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

plugins:
  - serverless-scriptable-plugin

custom:
  scriptable:
    hooks:
      after:deploy:deploy: serverless invoke -f LoadData
